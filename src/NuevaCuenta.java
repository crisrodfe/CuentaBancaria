
import java.awt.event.ActionEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
/**
 *
 * @author CrisRodFe
 */
public class NuevaCuenta extends javax.swing.JDialog {
     /*
        * Inicializamos la variables que vamos a necesitar para los diferentes tipos de ccc.
        */
        ArrayList<CuentaBancaria>cuenta= new ArrayList<>();               
        Serializar sr = new Serializar();//Creamos una instancia de la clase serializar para utilizar su método y guardar los datos
        String fichero = "datosClientes.dat";                    
    /**
     * Creates new form NuevaCuenta
     * @param parent
     * @param modal
     */
    public NuevaCuenta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        File datos = new File("datosClientes.dat");     
        if(datos.exists())
            cuenta=(ArrayList<CuentaBancaria>)sr.leerObjeto("datosClientes.dat");
        
        //Ocultamos los paneles de datos específicos de las cuentas, se mostrarán cuando se elija el tipo de ccc.
        ParamPers.setVisible(false);
        ParamAhorro.setVisible(false);
        ParamCorr.setVisible(false);
        ParamEmp.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipoCuenta = new javax.swing.ButtonGroup();
        jLabel17 = new javax.swing.JLabel();
        ParamPers = new javax.swing.JPanel();
        mantenimiento = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        apellido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        empresa = new javax.swing.JRadioButton();
        nombre = new javax.swing.JTextField();
        ParamCorr = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        ahorro = new javax.swing.JRadioButton();
        numCuenta = new javax.swing.JTextField();
        personal = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        ParamAhorro = new javax.swing.JPanel();
        interesAnual = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ParamEmp = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        comision = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        maximo = new javax.swing.JTextField();
        interes = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        Limpiar = new javax.swing.JButton();
        Guardar = new javax.swing.JButton();
        fechaNac = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        saldoInicial = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        jLabel17.setText("€");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("AÑADIR NUEVA CUENTA");
        setAlwaysOnTop(true);
        setModal(true);
        setSize(new java.awt.Dimension(600, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ParamPers.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Parámetros CC Personal"));

        jLabel11.setText("Cuota Mantenimiento");

        jLabel18.setText("€");

        javax.swing.GroupLayout ParamPersLayout = new javax.swing.GroupLayout(ParamPers);
        ParamPers.setLayout(ParamPersLayout);
        ParamPersLayout.setHorizontalGroup(
            ParamPersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamPersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(mantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addContainerGap(11, Short.MAX_VALUE))
        );
        ParamPersLayout.setVerticalGroup(
            ParamPersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamPersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ParamPersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel18))
                .addContainerGap())
        );

        getContentPane().add(ParamPers, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 310, -1));
        getContentPane().add(apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 62, 187, -1));

        jLabel2.setText("Apellido");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 68, -1, -1));

        jLabel3.setText("Nombre");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 34, -1, -1));

        tipoCuenta.add(empresa);
        empresa.setText("C Corriente Empresa");
        empresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empresaActionPerformed(evt);
            }
        });
        getContentPane().add(empresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, -1, -1));
        getContentPane().add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 28, 187, -1));

        ParamCorr.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Parámetros Cuenta Corriente"));

        jLabel9.setText("Entidades Autorizadas");

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo", "Cantidad"
            }
        ));
        jScrollPane2.setViewportView(Tabla);

        javax.swing.GroupLayout ParamCorrLayout = new javax.swing.GroupLayout(ParamCorr);
        ParamCorr.setLayout(ParamCorrLayout);
        ParamCorrLayout.setHorizontalGroup(
            ParamCorrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamCorrLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel9)
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(ParamCorrLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 15, Short.MAX_VALUE))
        );
        ParamCorrLayout.setVerticalGroup(
            ParamCorrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamCorrLayout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );

        getContentPane().add(ParamCorr, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 250, 250, 130));

        tipoCuenta.add(ahorro);
        ahorro.setText("C Ahorro");
        ahorro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ahorroActionPerformed(evt);
            }
        });
        getContentPane().add(ahorro, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, -1, -1));
        getContentPane().add(numCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 143, 187, -1));

        tipoCuenta.add(personal);
        personal.setText("C Corriente Personal");
        personal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personalActionPerformed(evt);
            }
        });
        getContentPane().add(personal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, -1, -1));

        jLabel4.setText("Fecha Nac.");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 110, -1, -1));

        ParamAhorro.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Parámetros CC Ahorro"));

        jLabel10.setText("Interés anual");

        jLabel14.setText("%");

        javax.swing.GroupLayout ParamAhorroLayout = new javax.swing.GroupLayout(ParamAhorro);
        ParamAhorro.setLayout(ParamAhorroLayout);
        ParamAhorroLayout.setHorizontalGroup(
            ParamAhorroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamAhorroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(interesAnual, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        ParamAhorroLayout.setVerticalGroup(
            ParamAhorroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamAhorroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ParamAhorroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(interesAnual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel14))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        getContentPane().add(ParamAhorro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 310, 70));

        jLabel5.setText("Nº Cuenta");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 149, -1, -1));

        jLabel13.setText("Tipo de Cuenta");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, -1, -1));

        ParamEmp.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Parámetros CC Empresa"));

        jLabel6.setText("Máximo descubierto");

        jLabel8.setText("Comisión por descubierto");

        jLabel7.setText("Interés por descubierto");

        jLabel15.setText("%");

        jLabel19.setText("€");

        jLabel20.setText("€");

        javax.swing.GroupLayout ParamEmpLayout = new javax.swing.GroupLayout(ParamEmp);
        ParamEmp.setLayout(ParamEmpLayout);
        ParamEmpLayout.setHorizontalGroup(
            ParamEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ParamEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ParamEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ParamEmpLayout.createSequentialGroup()
                        .addComponent(comision, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20))
                    .addGroup(ParamEmpLayout.createSequentialGroup()
                        .addComponent(interes, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15))
                    .addGroup(ParamEmpLayout.createSequentialGroup()
                        .addComponent(maximo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        ParamEmpLayout.setVerticalGroup(
            ParamEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParamEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ParamEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ParamEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ParamEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(interes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15))
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ParamEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel20))
                .addContainerGap())
        );

        getContentPane().add(ParamEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 310, -1));

        Limpiar.setText("Limpiar");
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(Limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 550, 108, -1));

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        getContentPane().add(Guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 550, 108, -1));
        getContentPane().add(fechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 104, 187, -1));

        jLabel12.setText("Saldo Inicial");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 183, -1, -1));
        getContentPane().add(saldoInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 177, 187, -1));

        jLabel1.setText("dd/mm/aaaa");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, -1, -1));

        jLabel16.setText("€");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Cuando elegimos un tipo de ccc aparecen los parámetros propios de
 dicha ccc para poder rellenarlos,desapareciendo el resto.
     *  
     */
    private void empresaActionPerformed(ActionEvent evt) {//GEN-FIRST:event_empresaActionPerformed
        ParamAhorro.setVisible(false);
        ParamCorr.setVisible(true);
        ParamEmp.setVisible(true);
        ParamPers.setVisible(false);
    }//GEN-LAST:event_empresaActionPerformed

    private void ahorroActionPerformed(ActionEvent evt) {//GEN-FIRST:event_ahorroActionPerformed
        ParamAhorro.setVisible(true);
        ParamCorr.setVisible(false);
        ParamEmp.setVisible(false);
        ParamPers.setVisible(false);
    }//GEN-LAST:event_ahorroActionPerformed

    private void personalActionPerformed(ActionEvent evt) {//GEN-FIRST:event_personalActionPerformed
        ParamAhorro.setVisible(false);
        ParamCorr.setVisible(true);
        ParamEmp.setVisible(false);
        ParamPers.setVisible(true);
    }//GEN-LAST:event_personalActionPerformed

    /**
     * Guardará en un archivo los datos introducido en el panel(si son válidos)
     * @param evt 
     */
    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
               
        
        
        if(validarCuenta() && validarFecha() && saldoInicial()){
        /*Si el nºde ccc es válido, el saldo es positivo y la fecha está en el formato correcto,  
         * se llevan a cabo las acciones específicas de cada ccc.  
         */  
            //En el caso de que sea una Cuenta Ahorro.
            if(ahorro.isSelected()){               
                CuentaAhorro ca = new CuentaAhorro();//Creamos nuevo objeto de la clase CuentaAhorro                                        
                Persona p = new Persona(nombre.getText(),apellido.getText(),fechaNac.getText());//Creamos nuevo objeto de la clase Persona a partir de los datos introducidos.        
                //Introducimos los datos en el objeto  de la clase CuentaAhorro usando los setters de dicha clase.                
                ca.setTitularCuenta(p);                                         
                ca.setNumeroCuenta(numCuenta.getText());                               
                ca.setSaldo(Float.parseFloat(saldoInicial.getText())); 
                //Comprobamos que el interés anual es positivo
                if (Float.parseFloat(interesAnual.getText()) >= 0){
                ca.setTipoInteres(Float.parseFloat(interesAnual.getText()));}
                else{
                  JOptionPane.showMessageDialog(rootPane,"El interés anual no puede ser una cantidad negativa","Error",JOptionPane.ERROR_MESSAGE);
                   }      
                //Añadimos el objeto creado en el Array 
                cuenta.add(ca);
               //Guardamos el Array en el archivo
                            
                }
            //En el caso de que sea una Cuenta Corriente de Empresa             
            if(empresa.isSelected()){
                CuentaCorrienteEmpresa ce = new CuentaCorrienteEmpresa();                               
                Persona p = new Persona(nombre.getText(),apellido.getText(),fechaNac.getText());
                Hashtable e = new Hashtable();
                ce.setTitularCuenta(p);                          
                ce.setNumeroCuenta(numCuenta.getText());               
                ce.setSaldo(Float.parseFloat(saldoInicial.getText())); 
                //Comprobadmos que el interés es una cantidad positiva
                if(Float.parseFloat(interes.getText())<0){
                    JOptionPane.showMessageDialog(rootPane,"Error","El interés por descubierto debe ser una cantidad positiva",JOptionPane.ERROR_MESSAGE);
                }else{
                ce.setIntDes(Float.parseFloat(interes.getText()));}
                //Comprobamos que la comisión es una cantidad positiva
                if(Float.parseFloat(comision.getText())<0){
                    JOptionPane.showMessageDialog(rootPane,"Error","La comisión por descubierto ser una cantidad positiva",JOptionPane.ERROR_MESSAGE);
                }else{
                ce.setComDes(Float.parseFloat(comision.getText()));}
                //Comprobamos que el máximo descubierto es una cantidad negativa
                if(Float.parseFloat(maximo.getText())>0){
                    JOptionPane.showMessageDialog(rootPane,"El máximo descubierto debe ser una cantidad negativa","Error",JOptionPane.ERROR_MESSAGE);
                }else{
                ce.setMaxDes(Float.parseFloat(maximo.getText()));}                                      
                for(int i =0;i<Tabla.getRowCount();i++){
                    e.put(Tabla.getValueAt(i, 0).toString(),Tabla.getValueAt(i, 1).toString());
                    }                                 
                ce.setEntidad(e);
                cuenta.add(ce);
                                        
                }
            //En el caso de que sea una Cuenta Corriente Personal
            if(personal.isSelected()){                                                
                CuentaCorrientePersonal cp = new CuentaCorrientePersonal(); 
                Hashtable e = new Hashtable();
                Persona p = new Persona(nombre.getText(),apellido.getText(),fechaNac.getText());
                cp.setTitularCuenta(p);                           
                cp.setNumeroCuenta(numCuenta.getText());                
                cp.setSaldo(Float.parseFloat(saldoInicial.getText()));                
                if(Float.parseFloat(mantenimiento.getText())<0){
                   JOptionPane.showMessageDialog(rootPane,"Error","La cuota de mantenimiento debe ser una cantidad positiva",JOptionPane.ERROR_MESSAGE); 
                }else{
                cp.setComMantenimiento(Float.parseFloat(mantenimiento.getText()));} 
                for(int i =0;i<Tabla.getRowCount();i++){
                    e.put(Tabla.getValueAt(i, 0).toString(),Tabla.getValueAt(i, 1).toString());
                    }
                cp.setEntidad(e);
                cuenta.add(cp);
                           
            }
        sr.grabarObjeto(cuenta, fichero);
        }else{
            //Lanzamos una ventana de información si alguno de los datos comunes a todas las cuentas no es válido
            if(!validarCuenta())
                JOptionPane.showMessageDialog(rootPane,"La cuenta introducida no es válida","Error",JOptionPane.ERROR_MESSAGE);
            if(!validarFecha())
                JOptionPane.showMessageDialog(rootPane,"La fecha introducida no es válida","Error",JOptionPane.ERROR_MESSAGE);
            if(!saldoInicial())
                JOptionPane.showMessageDialog(rootPane,"El saldo inicial debe ser una cantidad positiva","Error",JOptionPane.ERROR_MESSAGE);
        }    
        
    }//GEN-LAST:event_GuardarActionPerformed
/**
 * Vacia el contenido de todo el panel
 * @param evt 
 */
    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        nombre.setText("");
        apellido.setText("");
        numCuenta.setText("");
        interes.setText("");
        interesAnual.setText("");
        comision.setText("");
        mantenimiento.setText("");
        fechaNac.setText("");
        maximo.setText("");
        ParamPers.setVisible(false);
        ParamAhorro.setVisible(false);
        ParamCorr.setVisible(false);
        ParamEmp.setVisible(false);
        tipoCuenta.clearSelection();
        saldoInicial.setText("");
        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Código", "Max.Cant."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };            
        });
                                    
    }//GEN-LAST:event_LimpiarActionPerformed
                
 
/** 
 * @return true si el número de ccc introducido es válido.
 Comprueba calculando los dígitos de control y comparándolos con los introducidos. 
 */    
public boolean validarCuenta(){ 	 
        String ccc = numCuenta.getText();
	Pattern cuentaPattern = Pattern.compile("\\d{20}");
	Matcher m = cuentaPattern.matcher(ccc);
	if(m.matches()){ 
		String banco = "00"+ccc.substring(0,8);		
		int suma = Integer.parseInt(banco.substring(0,1))*1+
			Integer.parseInt(banco.substring(1,2))*2+
			Integer.parseInt(banco.substring(2,3))*4+
			Integer.parseInt(banco.substring(3,4))*8+
			Integer.parseInt(banco.substring(4,5))*5+
			Integer.parseInt(banco.substring(5,6))*10+
			Integer.parseInt(banco.substring(6,7))*9+
			Integer.parseInt(banco.substring(7,8))*7+
			Integer.parseInt(banco.substring(8,9))*3+
			Integer.parseInt(banco.substring(9,10))*6; 
		int control= 11 - (suma%11);		
		if (control==10)
			control=1;
		else if (control==11)
			control=0; 	 
		int controlBanco = Integer.parseInt(ccc.substring(8,9));
		if (controlBanco!=control)
			return false;		 		
		suma = Integer.parseInt(ccc.substring(10,11))*1+
			Integer.parseInt(ccc.substring(11,12))*2+
			Integer.parseInt(ccc.substring(12,13))*4+
			Integer.parseInt(ccc.substring(13,14))*8+
			Integer.parseInt(ccc.substring(14,15))*5+
			Integer.parseInt(ccc.substring(15,16))*10+
			Integer.parseInt(ccc.substring(16,17))*9+
			Integer.parseInt(ccc.substring(17,18))*7+
			Integer.parseInt(ccc.substring(18,19))*3+
			Integer.parseInt(ccc.substring(19,20))*6; 
		control= 11 - (suma%11);
		if (control==10)
			control=1;
		else if (control==11)
			control=0;		 
		int controlcuenta = Integer.parseInt(ccc.substring(9,10));
		if (controlcuenta!=control)
			return false;
		else
			return true;
	}
	else
		return false; 
}

/**
 * 
 * @return true si el saldo introducido es un número positivo
 */
public boolean saldoInicial(){ 
            return Float.parseFloat(saldoInicial.getText()) >= 0;
}
/**
 *
 * @return true si la fecha es válida
 * Comprueba que el formato fecha sea "dd/mm/aaaa" 
 */
public boolean validarFecha(){
    Pattern fechaPattern = Pattern.compile("(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/(19|20)\\d\\d");
    Matcher m = fechaPattern.matcher(fechaNac.getText());
            return m.matches();
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevaCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevaCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevaCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevaCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NuevaCuenta dialog = new NuevaCuenta(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setLocationRelativeTo(null);
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Guardar;
    private javax.swing.JButton Limpiar;
    private javax.swing.JPanel ParamAhorro;
    private javax.swing.JPanel ParamCorr;
    private javax.swing.JPanel ParamEmp;
    private javax.swing.JPanel ParamPers;
    private javax.swing.JTable Tabla;
    private javax.swing.JRadioButton ahorro;
    private javax.swing.JTextField apellido;
    private javax.swing.JTextField comision;
    private javax.swing.JRadioButton empresa;
    private javax.swing.JTextField fechaNac;
    private javax.swing.JTextField interes;
    private javax.swing.JTextField interesAnual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField mantenimiento;
    private javax.swing.JTextField maximo;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField numCuenta;
    private javax.swing.JRadioButton personal;
    private javax.swing.JTextField saldoInicial;
    private javax.swing.ButtonGroup tipoCuenta;
    // End of variables declaration//GEN-END:variables
}
